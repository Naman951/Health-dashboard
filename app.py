# -*- coding: utf-8 -*-
"""app

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1nx-mN2XRcRxcgNn8w2oaJVGg3SuAD2W0
"""

import numpy as np
import pandas as pd

df = pd.read_csv('diabetes.csv')

df.head()

df.info()

df.isnull().sum()

df.describe()

"""Preprocess the data

"""

X = df.drop('Outcome', axis = 1)
y = df['Outcome']

from sklearn.model_selection import train_test_split

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

"""Scale the data

"""

from sklearn.preprocessing import StandardScaler

scaler = StandardScaler()
X_train = scaler.fit_transform(X_train)
X_test = scaler.transform(X_test)

df

"""Training model"""

from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import classification_report

model = RandomForestClassifier()
model.fit(X_train, y_train)

y_pred = model.predict(X_test)

print(classification_report(y_test, y_pred))

import pickle

# Save the model
with open('model.pkl', 'wb') as file:
    pickle.dump(model, file)

# Save the scaler
with open('scaler.pkl', 'wb') as file:
    pickle.dump(scaler, file)

import streamlit as st
import numpy as np
import pickle

# Load your trained model
model = pickle.load(open('model.pkl', 'rb'))
scaler = pickle.load(open('scaler.pkl', 'rb'))

st.title("Personal Health Dashboard - Diabetes Prediction")

# Take input for all 8 features
pregnancies = st.number_input('Pregnancies', 0, 20)
glucose = st.number_input('Glucose Level', 0, 200)
blood_pressure = st.number_input('Blood Pressure', 0, 150)
skin_thickness = st.number_input('Skin Thickness', 0, 100)
insulin = st.number_input('Insulin', 0, 900)
bmi = st.number_input('BMI', 0.0, 60.0)
diabetes_pedigree_function = st.number_input('Diabetes Pedigree Function', 0.0, 3.0)
age = st.slider('Age', 0, 100)

# Create input data array with all 8 features
input_data = np.array([[pregnancies, glucose, blood_pressure, skin_thickness, insulin, bmi, diabetes_pedigree_function, age]])

# Scale the input data
input_data_scaled = scaler.transform(input_data)

if st.button("Predict"):
    prediction = model.predict(input_data_scaled)
    if prediction[0] == 1:
        st.error("High Risk of Diabetes. Suggestion: Exercise, Control Sugar Intake.")
    else:
        st.success("Low Risk of Diabetes. Keep maintaining a healthy lifestyle.")

import pickle
pickle.dump(model, open('model.pkl', 'wb'))
pickle.dump(scaler, open('scaler.pkl', 'wb'))